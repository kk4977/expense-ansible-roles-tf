- name: disable default NodeJS
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable NodeJS:20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: Install NodeJS and MySQL
  ansible.builtin.dnf: 
    name: "{{ item }}"
    state: installed
  loop: 
  - nodejs
  - mysql

- name: create user expense
  ansible.builtin.user:
    name: expense

- name: run app pre-requisites
  tags:
  - deployment
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req

- name: Download the npm dependencies
  tags:
  - deployment
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: Copy to Backend server
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install python mysql dependencies
  ansible.builtin.pip: 
    name:
    - PyMySQL # to connect MySQL DB from Ansible
    - cryptography
    executable: pip3.9  

- name: Import data to mysql database
  community.mysql.mysql_db:
    login_host: "{{ login_host }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    target: /app/schema/backend.sql
    state: import
    name: all
- name: daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true
  

# - name: deamon reload
#   ansible.builtin.systemd:
#     daemon_reload: yes
- name: start and enable backend backend service
  tags: 
  - deployment
  ansible.builtin.systemd:
    name: backend
    state: started
    enabled: yes